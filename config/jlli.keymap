#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

#define BASE 0
#define BT_LAYER 1

/ {
    behaviors {
        hml: hml {
            compatible = "zmk,behavior-hold-tap";
            label = "HML";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            hold-trigger-key-positions = <32 33 31 30 25 26 27 28 29 19 18 17 16 15 5 6 7 8 9>;
            tapping-term-ms = <200>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            flavor = "balanced";
        };

        hmr: hmr {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            hold-trigger-key-positions = <32 33 31 30 22 20 21 23 24 14 13 12 11 10 0 1 2 3 4>;
            tapping-term-ms = <200>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            flavor = "balanced";
        };
    };

    combos {
        compatible = "zmk,combos";

        cmb_under {
            bindings = <&kp UNDERSCORE>;
            key-positions = <26 27>;
        };

        cmb_minus {
            bindings = <&kp MINUS>;
            key-positions = <27 28>;
        };

        cmb_tab {
            bindings = <&kp TAB>;
            key-positions = <1 8>;
        };

        cmb_single {
            bindings = <&kp SINGLE_QUOTE>;
            key-positions = <2 7>;
        };

        cmb_dbl {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <3 6>;
        };

        cmb_caps {
            bindings = <&caps_word>;
            key-positions = <23 26>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q        &kt W            &kp F         &kp P              &kp B      &kp J        &kp L               &kp U         &kp Y             &kp SEMICOLON
&hml LGUI A  &hml LEFT_ALT R  &hml LCTRL S  &hml LEFT_SHIFT T  &kp G      &kp M        &hmr RIGHT_SHIFT N  &hmr RCTRL E  &hmr RIGHT_ALT I  &hmr RGUI O
&lt 4 Z      &kp X            &kp C         &kp D              &kp V      &kp K        &kp H               &kp COMMA     &kp PERIOD        &lt 3 SLASH
                                            &lt 2 ESC          &kp SPACE  &lt 1 ENTER  &kp BACKSPACE
            >;
        };

        code {
            bindings = <
&kp ASTERISK  &kp N7  &kp N8  &kp N9  &kp SLASH  &kp BACKSLASH  &kp LESS_THAN           &kp PIPE                        &kp GREATER_THAN      &trans
&kp MINUS     &kp N4  &kp N5  &kp N6  &kp PLUS   &kp PERCENT    &hmr RSHIFT LEFT_BRACE  &hmr RIGHT_CONTROL RIGHT_BRACE  &hmr RIGHT_ALT COLON  &hmr RGUI SEMICOLON
&kp TILDE     &kp N1  &kp N2  &kp N3  &kp EQUAL  &kp LBKT       &kp RBKT                &trans                          &trans                &trans
                              &kp N0  &trans     &trans         &trans
            >;
        };

        nav {
            bindings = <
&trans    &trans        &trans          &trans          &trans  &trans  &trans    &trans    &trans         &trans
&kp LGUI  &kp LEFT_ALT  &kp LCTRL       &kp LEFT_SHIFT  &trans  &trans  &kp LEFT  &kp DOWN  &kp UP         &kp RIGHT
&trans    &trans        &kp RG(K_COPY)  &kp K_PASTE     &trans  &trans  &kp HOME  &kp END   &kp PAGE_DOWN  &kp PAGE_UP
                                        &trans          &trans  &trans  &trans
            >;
        };

        media {
            bindings = <
&trans      &trans             &trans    &trans           &trans      &trans  &trans  &trans  &trans  &trans
&kp C_PREV  &kp C_VOLUME_DOWN  &kp C_PP  &kp C_VOLUME_UP  &kp C_NEXT  &trans  &trans  &trans  &trans  &trans
&trans      &trans             &trans    &trans           &trans      &trans  &trans  &trans  &trans  &trans
                                         &trans           &trans      &trans  &trans
            >;
        };

        bt_control {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &bt BT_CLR    &out OUT_TOG  &sys_reset  &bootloader  &trans
&trans  &trans  &trans  &trans  &trans  &bt BT_SEL 0  &bt BT_SEL 1  &trans      &trans       &trans
&trans  &trans  &trans  &trans  &trans  &trans        &trans        &trans      &trans       &trans
                        &trans  &trans  &trans        &trans
            >;
        };
    };
};
