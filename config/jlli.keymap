#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

#define VBASE 0
#define VCODE 1
#define VNAVI 2
#define VMEDI 3
#define VBLTH 4
#define VFUNC 4

#define HAS_MOUSE_KEYS

// Personal includes
#ifdef HAS_MOUSE_KEYS
     #include "includes/mouse_keys.dtsi"
#endif

#ifdef HAS_MOUSE_TP
     #include "includes/mouse_tp.dtsi"
#endif

/ {
    behaviors {
        hml: hml {
            compatible = "zmk,behavior-hold-tap";
            label = "HML";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            hold-trigger-key-positions = <32 33 31 30 25 26 27 28 29 19 18 17 16 15 5 6 7 8 9>;
            tapping-term-ms = <200>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            flavor = "balanced";
        };

        hmr: hmr {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            hold-trigger-key-positions = <32 33 31 30 22 20 21 23 24 14 13 12 11 10 0 1 2 3 4>;
            tapping-term-ms = <200>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            flavor = "balanced";
        };
    };

    combos {
        compatible = "zmk,combos";

        cmb_under {
            bindings = <&kp UNDERSCORE>;
            key-positions = <26 27>;
        };

        cmb_minus {
            bindings = <&kp MINUS>;
            key-positions = <27 28>;
        };

        cmb_tab {
            bindings = <&kp TAB>;
            key-positions = <1 8>;
        };

        cmb_single {
            bindings = <&kp SINGLE_QUOTE>;
            key-positions = <2 7>;
        };

        cmb_dbl {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <3 6>;
        };

        cmb_caps {
            bindings = <&caps_word>;
            key-positions = <23 26>;
        };

        cmb_skinny {
            bindings = <&skinny_arrow>;
            key-positions = <13 16>;
        };

        cmb_pipe {
            bindings = <&pipe_opr>;
            key-positions = <14 15>;
        };

        cmb_save {
            bindings = <&vim_save>;
            key-positions = <30 1>;
        };

        cmb_fat {
            bindings = <&fat_arrow>;
            key-positions = <13 16 30>;
        };
    };

    macros {
        vim_save: vim_save {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp ESCAPE &kp COLON &kp W &kp ENTER>;
            label = "VIM_SAVE";
        };

        skinny_arrow: skinny_arrow {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp MINUS &kp GREATER_THAN>;
            label = "SKINNY_ARROW";
        };

        fat_arrow: fat_arrow {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp EQUAL &kp GREATER_THAN>;
            label = "FAT_ARROW";
        };

        pipe_opr: pipe_opr {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp PIPE &kp GREATER_THAN>;
            label = "PIPE_OPR";
        };

        bt_0: bt_0 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&out OUT_BLE &bt BT_SEL 0>;
            label = "BT_0";
        };

        bt_1: bt_1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&out OUT_BLE &bt BT_SEL 1>;
            label = "BT_1";
        };

        bt_2: bt_2 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&out OUT_BLE &bt BT_SEL 2>;
            label = "BT_2";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q        &kt W          &kp F          &kp P         &kp B           &kp J          &kp L           &kp U            &kp Y           &kp SEMI
&hml LGUI A  &hml LALT R    &hml LCTRL S   &hml LSHFT T  &kp G           &kp M          &hmr RSHFT N    &hmr RCTRL E     &hmr RALT I     &hmr RGUI O
&lt VBLTH Z  &kp X          &kp C          &kp D         &kp V           &kp K          &kp H           &kp COMMA        &kp PERIOD      &lt VMEDI SLASH
                                           &lt VNAVI ESC &kp SPACE       &lt VCODE RET  &lt VBLTH BSPC
            >;
        };

        code {
            bindings = <
&kp ASTRK    &kp N7         &kp N8         &kp N9        &kp SLASH       &kp BSLH       &kp LT          &kp PIPE         &kp GT           &trans
&kp MINUS    &kp N4         &kp N5         &kp N6        &kp PLUS        &kp PRCNT      &hmr RSHFT LBRC &hmr RCTRL RBRC  &hmr RALT COLON  &hmr RGUI SEMI
&kp TILDE    &kp N1         &kp N2         &kp N3        &kp EQUAL       &kp LBKT       &kp RBKT        &trans           &trans           &trans
                                           &kp N0        &trans          &trans         &trans
            >;
        };

        nav {
            bindings = <
&trans      &trans         &mkp RCLK       &mkp LCLK     &trans          &trans         &trans         &trans           &trans            &trans
&kp LGUI    &kp LALT       &kp LCTRL       &kp LSHFT     &trans          &trans         &kp LEFT       &kp DOWN         &kp UP            &kp RIGHT
&trans      &trans         &kp RG(K_COPY)  &kp K_PASTE   &trans          &trans         &kp HOME       &kp END          &kp PAGE_DOWN     &kp PAGE_UP
                                           &trans        &trans          &trans         &trans
            >;
        };

        media {
            bindings = <
&trans      &trans         &trans          &trans        &trans          &trans         &trans        &trans            &trans            &trans
&kp C_PREV  &kp C_VOL_DN   &kp C_PP        &kp C_VOL_UP  &kp C_NEXT      &trans         &trans        &trans            &trans            &trans
&trans      &trans         &trans          &trans        &trans          &trans         &trans        &trans            &trans            &trans
                                           &trans        &trans          &trans         &trans
            >;
        };

        bt_control {
            bindings = <
&trans      &trans        &trans          &trans         &trans         &bt BT_CLR      &none         &sys_reset        &bootloader       &trans
&trans      &trans        &trans          &trans         &trans         &bt_0           &bt_1         &bt_2             &trans            &trans
&trans      &trans        &trans          &trans         &trans         &trans          &trans        &trans            &trans            &trans
                                          &trans         &trans         &trans          &trans
            >;
        };

        func {
            bindings = <
&kp F9      &kp F10       &kp F11         &kp F12        &none          &none           &none         &none             &none            &none 
&kp F5      &kp F6        &kp F7          &kp F8         &none          &none           &none         &none             &none            &none
&kp F1      &kp F2        &kp F3          &kp F4         &none          &none           &none         &none             &none            &none
                                          &none          &none          &none           &none
            >;
        };
    };
};
